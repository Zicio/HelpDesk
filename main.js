(()=>{"use strict";class t{constructor(){this.url=new URL("https://zicio-heroku.herokuapp.com/")}async getTickets(){this.url.searchParams.set("method","allTickets");const t=await fetch(this.url.href);let e;return t.ok&&(e=await t.json(),console.log(e)),e}async getTicket(t){this.url.searchParams.set("method","ticketById"),this.url.searchParams.append("id",`${t}`);const e=await fetch(this.url.href);let s;return e.ok&&(s=await e.json(),console.log(s)),this.url.searchParams.delete("id"),s[0]}async postTicket(t,e,s){switch(t){case"createTicket":this.url.searchParams.set("method","createTicket");break;case"deleteTicket":this.url.searchParams.set("method","deleteTicket");break;case"changeTicket":this.url.searchParams.set("method","changeTicket")}let c;return e&&this.url.searchParams.append("id",`${e}`),c=s?await fetch(this.url.href,{method:"POST",body:new FormData(s)}):await fetch(this.url.href),this.url.searchParams.delete("id"),c}}class e{constructor(t){this.element=t}static showTickets(t){const e=document.querySelector(".tickets"),s=e.getElementsByClassName("ticket");if(s.length)for(const t of[...s])t.remove();for(const s of t){const t=`<div class="ticket"><input type="checkbox" class="ticket__check" id="${s.id}"><span class="ticket__name">${s.name}</span><span class="ticket__date">${s.created}</span><input type="button" class="ticket__change ticket__button" value="&#9998"><input type="button" class="ticket__delete ticket__button" value="X">`;e.insertAdjacentHTML("beforeend",t),s.status&&document.getElementById(s.id).setAttribute("checked",!0)}}static showPopup(t,e,s){const c=document.querySelector(".popup"),i=c.querySelector(".popup__form"),a=c.querySelector(".popup__text"),o=c.querySelector(".active");for(const t of i.elements)t.value=null;if(o&&o.classList.remove("active"),t&&(c.querySelector(".popup__title").textContent=t),"Добавить тикет"===t&&i.classList.add("active"),"Удалить тикет"===t){a.classList.add("active");const t=c.querySelector(".ok-button"),{id:e}=s.target.closest(".ticket").querySelector(".ticket__check");t.dataset.ticketId=e}if(e){i.classList.add("active");const t=i.querySelector(".short-description"),a=i.querySelector(".detailed-description");t.value=`${e.name}`,a.value=`${e.description}`;const o=c.querySelector(".ok-button"),{id:r}=s.target.closest(".ticket").querySelector(".ticket__check");o.dataset.ticketId=r}c.classList.toggle("active")}static showDescription(t,e){const s=document.createElement("p");s.classList.add("ticket__description"),s.textContent=e.description,t.target.appendChild(s)}}new class{constructor(e){this.element=e,this.request=new t,this.start(),this.listener()}async start(){const t=await this.request.getTickets();e.showTickets(t)}listener(){this.element.addEventListener("click",(t=>this.eventHandler(t)))}eventHandler(t){if(t.target.classList.contains("desk__add-button"))e.showPopup("Добавить тикет");else if(t.target.classList.contains("cancel-button"))e.showPopup();else if(t.target.classList.contains("ticket__change"))this.change(t);else if(t.target.classList.contains("ticket__delete"))e.showPopup("Удалить тикет",null,t);else{if(!t.target.classList.contains("ticket"))return t.target.classList.contains("ok-button")&&"Добавить тикет"===t.target.closest(".popup").querySelector(".popup__title").textContent?(t.preventDefault(),void this.sendTicket(t)):t.target.classList.contains("ok-button")&&"Удалить тикет"===t.target.closest(".popup").querySelector(".popup__title").textContent?(t.preventDefault(),void this.deleteTicket(t)):t.target.classList.contains("ok-button")&&"Изменить тикет"===t.target.closest(".popup").querySelector(".popup__title").textContent?(t.preventDefault(),void this.changeTicket(t)):void(t.target.classList.contains("ticket__check")&&this.checkTicket(t));this.expand(t)}}async change(t){const s=await this.requestTicket(t);e.showPopup("Изменить тикет",s,t)}async expand(t){const s=t.target.querySelector(".ticket__description");if(s)return void s.remove();const c=await this.requestTicket(t);e.showDescription(t,c)}async requestTicket(t){const e=t.target.closest(".ticket").querySelector(".ticket__check").getAttribute("id");return await this.request.getTicket(e)}async sendTicket(t){const s=t.target.closest(".popup").querySelector(".popup__form");(await this.request.postTicket("createTicket",null,s)).ok&&(e.showPopup(),this.start())}async deleteTicket(t){const s=t.target.dataset.ticketId;(await this.request.postTicket("deleteTicket",s)).ok&&(e.showPopup(),this.start())}async changeTicket(t){const s=t.target.dataset.ticketId,c=t.target.closest(".popup").querySelector(".popup__form");(await this.request.postTicket("changeTicket",s,c)).ok&&(e.showPopup(),this.start())}checkTicket(t){const e=t.target.getAttribute("id");this.request.postTicket("changeTicket",e)}}(document)})();